#!/usr/bin/env bash
set -euo pipefail

APP_DATA_DIR="$(readlink -f "$(dirname "${BASH_SOURCE[0]}")/..")"
UMBREL_QBITTORRENT_CONFIG_FLAG="${APP_DATA_DIR}/HAS_BEEN_CONFIGURED_BY_UMBREL"

#  Run the post-install hook if the qBittorrent app has not been configured
#  This is so legacy installs can have their qBittorrent app configured
if [[ ! -f "${UMBREL_QBITTORRENT_CONFIG_FLAG}" ]]; then
  echo "This is a legacy install. Configuring qBittorrent..."
  # stop the qBittorrent service here because the umbrelOS 1.x shim won't replace ${UMBREL_ROOT}/scripts/app when we run the post-install hook from here
  "${UMBREL_ROOT}/scripts/app" compose "${APP_ID}" stop server

  "${APP_DATA_DIR}/hooks/post-install"

  # start the qBittorrent service here because the umbrelOS 1.x shim won't replace ${UMBREL_ROOT}/scripts/app when we run the post-install hook from here
  
  "${UMBREL_ROOT}/scripts/app" compose "${APP_ID}" start server

  # Restart *arr apps in order to trigger automatic configuration

  apps=("radarr" "sonarr" "lidarr" "readarr" "prowlarr")

  installed_apps=$("${UMBREL_ROOT}/scripts/app" ls-installed)

  for app in "${apps[@]}"; do
    if echo "$installed_apps" | grep --quiet "$app"; then
      # We don't block the script on restarting apps because we want to restart all apps in parallel
      # AND we need qBittorrent to be listed as an installed app when the apps restart. 
      "${UMBREL_ROOT}/scripts/app" restart "$app" &
    fi
  done
fi